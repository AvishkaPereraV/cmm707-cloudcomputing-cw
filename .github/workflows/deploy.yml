name: Deploy & Test

on:
  workflow_run:
    workflows: ["Build & Push Images"]
    types: [completed]       # We'll gate on success in an if: below
  workflow_dispatch:

jobs:
  deploy:
    if: ${{ github.event_name == 'workflow_dispatch' ||
            (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') }}
    runs-on: [self-hosted, Windows, X64]   # match runner labels exactly


    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Allow PowerShell scripts for this job
        shell: powershell
        run: |
          Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass -Force


      - name: Install kubectl (Windows)
        shell: powershell
        run: |
          choco install kubernetes-cli -y
          # refresh PATH for this session
          $env:Path = [System.Environment]::GetEnvironmentVariable('Path','Machine') + ';' + [System.Environment]::GetEnvironmentVariable('Path','User')
          kubectl version --client

      - name: Configure kubeconfig
        shell: powershell
        run: |
          New-Item -ItemType Directory -Force -Path "$HOME\.kube" | Out-Null
          [IO.File]::WriteAllBytes("$HOME\.kube\config",[Convert]::FromBase64String("${{ secrets.KUBE_CONFIG_DATA }}"))
          kubectl config current-context
          kubectl get nodes

      - name: Set images to :latest
        shell: powershell
        run: |
          kubectl set image deploy/game-service        game-service=${{ secrets.DOCKERHUB_USERNAME }}/game-service:latest
          kubectl set image deploy/order-service       order-service=${{ secrets.DOCKERHUB_USERNAME }}/order-service:latest
          kubectl set image deploy/analytics-service   analytics-service=${{ secrets.DOCKERHUB_USERNAME }}/analytics-service:latest
          kubectl set image deploy/frontend            frontend=${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest

      - name: Wait for rollouts (zero-downtime rolling update)
        shell: powershell
        run: |
          kubectl rollout status deploy/game-service        --timeout=180s
          kubectl rollout status deploy/order-service       --timeout=180s
          kubectl rollout status deploy/analytics-service   --timeout=180s
          kubectl rollout status deploy/frontend            --timeout=180s

      - name: Smoke test – analytics POST
        shell: powershell
        run: |
          $pf = Start-Process -PassThru -WindowStyle Hidden powershell -ArgumentList 'kubectl port-forward svc/analytics-service 18002:8000'
          Start-Sleep -Seconds 4
          try {
            $payload = @{
              event_type = "page_view"
              page_url   = "/"
              user_agent = "ci-test"
              session_id = "ci-${{ github.run_id }}"
              ts         = (Get-Date).ToString("o")
            } | ConvertTo-Json
            Invoke-RestMethod -Uri http://localhost:18002/track -Method POST -ContentType 'application/json' -Body $payload | Out-Null
            Write-Host "Analytics POST OK"
          } finally {
            Stop-Process -Id $pf.Id -Force
          }

      - name: Smoke test – frontend HTTP 200
        shell: powershell
        run: |
          $nodePort = kubectl get svc frontend -o jsonpath='{.spec.ports[0].nodePort}'
          $url = "http://127.0.0.1:$nodePort"
          Write-Host "Testing $url"
          Start-Sleep -Seconds 3
          $r = Invoke-WebRequest -Uri $url -UseBasicParsing
          if ($r.StatusCode -ne 200) { throw "Frontend returned $($r.StatusCode)" }
          Write-Host "Frontend OK"
